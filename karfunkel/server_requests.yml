#Encoding: UTF-8
#This file describes all requests the Karfunkel OpenRubyRMK server
#is able to understand. It’s written in YAML, and the descriptions
#are in Textile markup. Read about Textile at
#http://textile.redcloth.org.
#
#The pattern to use for this file is (without the first 2 spaces indentation):
#  NameOfRequest:
#    desc: >
#      Put a long and useful description here that covers everything
#      general that needs to be known.
#    parameters:
#      para1: Description of the parameter
#      para2: Description of the parameter
#    responses:
#      response_type_1:
#        desc: Description of the response.
#        parameters:
#          resp_para1: Description of this parameter
#          resp_para2: Description of this parameter
#    notifications: ###Can be left out if not needed###
#      note1:
#        desc: A description of this notification.
#        parameters:
#          note_para1: Description of this parameter
#          note_para2: Description of this paramter
#  NameOfYourSecondRequest:
#  ...
---
Shutdown:
  desc: >-
    As the name hopefully implies, this request initiates a server
    shutdown, i.e. asks Karfunkel to halt himself. When you send
    such a request to Karfunkel, he in turn will issue @Shutdown@
    requests to all connected clients, asking them wheather they
    agree with the shutdown you requested (you see, the @Shutdown@
    request is "biderectional": If you send it to Karfunkel, he’ll
    start halting, and if you as a client receive one, it’s Karfunkel
    asking wheather he’s allowed to halt). If you answer the request
    with @ok@, you agree to a shutdown, whereas a @rejected@ reponse
    will cause Kafunkel to abort the shutdown.
  parameters:
    requestor: >-
      [OPTIONAL] When you _send_ this request, don’t set this, it would
      be ignored. When you _receive_ this request, this is the ID of
      the client who originally asked Karfunkel to shutdown.
  responses:
    ok:
      desc: >
        Always replied by Karfunkel if you _send_ this request to him.
        If you _receive_ a @Shutdown@ request, you agree to the shutdown
        with this response.
    rejected:
      desc: Use this to abort a running shutdown.
Eval:
  desc: >
    The @Eval@ request is for debugging purposes. It causes
    Karfunkel to run arbitrary Ruby code (via @eval@) in the
    context of the Eval request. It is *only* available if Karfunkel
    is running in debug mode; pass the @-d@ commandline-parameter if
    you _really_ want to do this. This creates a *huge* security hole.
    As said, this is for *debugging* purposes. If you don't want to
    debug Karfunkel, *do not use* this request.
  parameters:
    code: Arbitrary Ruby code, which may span multiple lines.
  responses:
    ok:
      desc: Your request was processed.
      parameters:
        result: Result of the code, on which @inspect@ was called.
    rejected:
      desc: >
        Karfunkel was not running in debug mode. This issue is logged on
        the server side together with your IP address.
    failed:
      desc: Your code raised an exception.
      parameters:
        exception: The exception's class.
        message: The exception's message.
        backtrace: The exception's backtrace, which may span multiple lines.

OpenProject:
  desc: >
    Makes Karfunkel load a given project file. The project is not selected, 
    that's a separate @SelectProject@ request. The path is understand as
    a path on the system Karfunkel runs on, so you may have to contact
    the person running the server to obtain the name of a project file (or
    just leave it to him/her to open a project).
    
    While the project is being loaded, several @load_project@ notifications are
    delivered and finally a @loaded_project@ notification is send when the
    project has completed loading.
  parameters:
    os: >
      Short string identifying your operating system which Karfunkel wants to
      know for compatibility reasons. One of @Windows@, @Mac@, @Linux@.
  responses:
    processing:
      desc: This is sent when Karfunkel accepted your request and now loads the project.
      parameters:
    finished: 
      desc: Send when the project is in a usable state.
      parameters:
    failed:
      desc: Reason why the project couldn't be loaded.
  notifications:
    load_project: 
      desc: A project is currently being loaded.
      parameters:
        name: The name of the project currently being loaded.
        percent: The percent already loaded.
    loaded_project:
      desc: A project has just finished being loaded.
      parameters:
        name: The project loaded.